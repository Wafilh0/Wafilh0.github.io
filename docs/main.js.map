{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/todo.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:8080/api/todos'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Todo } from './todo';\nimport { TodoService } from './todo.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  todos: Todo[] = [];\n  form: FormGroup = new FormGroup({\n    description: new FormControl('', [Validators.required, Validators.minLength(4)] )\n  })\n\n  constructor(\n    private service: TodoService\n  ) { }\n\n  ngOnInit() {\n    this.listarTodos()\n  }\n\n  listarTodos() {\n    this.service.listar().subscribe(todoList => {\n      console.log(todoList)\n      this.todos = todoList\n    })\n  }\n\n  submit() {\n    const todo: Todo = { ...this.form.value }\n    this.service\n      .salvar(todo)\n      .subscribe(savedTodo => {\n        this.todos.push(savedTodo)\n        this.form.reset()\n      })\n  }\n\n  delete(todo: Todo) {\n    this.service.deletar(todo.id).subscribe({\n      next: (response) => this.listarTodos()\n    })\n  }\n\ndone(todo: Todo) {\n  this.service.marcarComoConcluido(todo.id).subscribe({\n    next: (todoAtualizado) => {\n      todo.done = todoAtualizado.done\n      todo.doneDate = todoAtualizado.doneDate\n    }\n  })\n}\n\n}\n","<nav class=\"navbar navbar-dark bg-dark\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"#\">\n            Todo App\n        </a>\n    </div>\n</nav>\n<div class=\"container mt-4\">\n    <h3>Todos</h3>\n    <hr>\n    <form [formGroup]=\"form\" (ngSubmit)=submit()>\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"description\">\n            </div>\n            <div class=\"col-md-1\">\n                <button type=\"submit\" [disabled]=\"!form.valid\" class=\"btn btn-primary\">Add</button>\n            </div>\n        </div>\n    </form>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-md-7\">\n            <ul class=\"list-group\">\n                <li *ngFor=\"let todo of todos\"\n                    class=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span class=\"{{ todo.done ? 'done' : '' }}\">\n                        {{ todo.description }} {{ todo.doneDate }}\n                    </span>\n                    <div class=\"btn-group\">\n                        <button class=\"btn btn-success\" [disabled]=\"todo.done\" (click)=\"done(todo)\">Done</button>\n                        <button class=\"btn btn-danger\" (click)=\"delete(todo)\">Delete</button>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Todo } from './todo';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  apiUrl: string = environment.apiURL\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  salvar(todo: Todo): Observable<Todo> {\n    return this.http.post<Todo>(this.apiUrl, todo)\n  }\n\n  listar() : Observable<Todo[]>{\n    return this.http.get<Todo[]>(this.apiUrl);\n  }\n\n  deletar(id : number) : Observable<void>{\n    const url = `${this.apiUrl}/${id}`\n    return this.http.delete<void>(url)\n  }\n  \n  marcarComoConcluido(id : number) : Observable<Todo>{\n    const url = `${this.apiUrl}/${id}/done`\n    return this.http.patch<Todo>(url, {})\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}